volumes:
  pg_data:
  static:
  media:

services:
  db:
    container_name: foodgram-db
    image: postgres:17.4-alpine
    volumes:
      - pg_data:/var/lib/postgresql/data
    env_file: ../.env
    networks:
      - backend
  backend:
    container_name: foodgram-back
    build:
      context: ..  # Корень проекта как контекст сборки
      dockerfile: backend/Dockerfile
    restart: always
    volumes:
      - static:/app/static/
      - media:/app/media/
    env_file: ../.env
    depends_on:
      - db
    networks:
      - backend
      - frontend
  frontend:
    container_name: foodgram-front
    build: ../frontend
    volumes:
      - ../frontend/:/app/result_build/
    depends_on:
      - backend
    networks:
      - frontend
  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static:/var/html/static/
      - media:/var/html/media/
    depends_on:
      - frontend
    networks:
      - frontend
    restart: always

networks:
  backend:
  frontend:
